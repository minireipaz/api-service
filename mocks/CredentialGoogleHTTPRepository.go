// Code generated by mockery v2.51.1. DO NOT EDIT.

package mocks

import (
	models "minireipaz/pkg/domain/models"

	mock "github.com/stretchr/testify/mock"

	time "time"
)

// CredentialGoogleHTTPRepository is an autogenerated mock type for the CredentialGoogleHTTPRepository type
type CredentialGoogleHTTPRepository struct {
	mock.Mock
}

// ExchangeGoogleCredential provides a mock function with given fields: currentCredential
func (_m *CredentialGoogleHTTPRepository) ExchangeGoogleCredential(currentCredential *models.RequestExchangeCredential) (*string, *string, *time.Time, *models.RequestExchangeCredential, error) {
	ret := _m.Called(currentCredential)

	if len(ret) == 0 {
		panic("no return value specified for ExchangeGoogleCredential")
	}

	var r0 *string
	var r1 *string
	var r2 *time.Time
	var r3 *models.RequestExchangeCredential
	var r4 error
	if rf, ok := ret.Get(0).(func(*models.RequestExchangeCredential) (*string, *string, *time.Time, *models.RequestExchangeCredential, error)); ok {
		return rf(currentCredential)
	}
	if rf, ok := ret.Get(0).(func(*models.RequestExchangeCredential) *string); ok {
		r0 = rf(currentCredential)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*string)
		}
	}

	if rf, ok := ret.Get(1).(func(*models.RequestExchangeCredential) *string); ok {
		r1 = rf(currentCredential)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*string)
		}
	}

	if rf, ok := ret.Get(2).(func(*models.RequestExchangeCredential) *time.Time); ok {
		r2 = rf(currentCredential)
	} else {
		if ret.Get(2) != nil {
			r2 = ret.Get(2).(*time.Time)
		}
	}

	if rf, ok := ret.Get(3).(func(*models.RequestExchangeCredential) *models.RequestExchangeCredential); ok {
		r3 = rf(currentCredential)
	} else {
		if ret.Get(3) != nil {
			r3 = ret.Get(3).(*models.RequestExchangeCredential)
		}
	}

	if rf, ok := ret.Get(4).(func(*models.RequestExchangeCredential) error); ok {
		r4 = rf(currentCredential)
	} else {
		r4 = ret.Error(4)
	}

	return r0, r1, r2, r3, r4
}

// GenerateAuthURL provides a mock function with given fields: credential, credentialCreatedNew
func (_m *CredentialGoogleHTTPRepository) GenerateAuthURL(credential *models.RequestExchangeCredential, credentialCreatedNew *bool) *string {
	ret := _m.Called(credential, credentialCreatedNew)

	if len(ret) == 0 {
		panic("no return value specified for GenerateAuthURL")
	}

	var r0 *string
	if rf, ok := ret.Get(0).(func(*models.RequestExchangeCredential, *bool) *string); ok {
		r0 = rf(credential, credentialCreatedNew)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*string)
		}
	}

	return r0
}

// NewCredentialGoogleHTTPRepository creates a new instance of CredentialGoogleHTTPRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCredentialGoogleHTTPRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *CredentialGoogleHTTPRepository {
	mock := &CredentialGoogleHTTPRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

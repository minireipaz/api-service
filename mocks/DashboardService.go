// Code generated by mockery v2.51.1. DO NOT EDIT.

package mocks

import (
	models "minireipaz/pkg/domain/models"

	mock "github.com/stretchr/testify/mock"
)

// DashboardService is an autogenerated mock type for the DashboardService type
type DashboardService struct {
	mock.Mock
}

// QueryDashboardInfo provides a mock function with given fields: userID
func (_m *DashboardService) QueryDashboardInfo(userID string) (models.InfoDashboard, error) {
	ret := _m.Called(userID)

	if len(ret) == 0 {
		panic("no return value specified for QueryDashboardInfo")
	}

	var r0 models.InfoDashboard
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (models.InfoDashboard, error)); ok {
		return rf(userID)
	}
	if rf, ok := ret.Get(0).(func(string) models.InfoDashboard); ok {
		r0 = rf(userID)
	} else {
		r0 = ret.Get(0).(models.InfoDashboard)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewDashboardService creates a new instance of DashboardService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDashboardService(t interface {
	mock.TestingT
	Cleanup(func())
}) *DashboardService {
	mock := &DashboardService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

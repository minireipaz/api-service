// Code generated by mockery v2.51.1. DO NOT EDIT.

package mocks

import (
	models "minireipaz/pkg/domain/models"

	mock "github.com/stretchr/testify/mock"
)

// UserBrokerRepository is an autogenerated mock type for the UserBrokerRepository type
type UserBrokerRepository struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: user
func (_m *UserBrokerRepository) CreateUser(user *models.SyncUserRequest) bool {
	ret := _m.Called(user)

	if len(ret) == 0 {
		panic("no return value specified for CreateUser")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func(*models.SyncUserRequest) bool); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// NewUserBrokerRepository creates a new instance of UserBrokerRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUserBrokerRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *UserBrokerRepository {
	mock := &UserBrokerRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
